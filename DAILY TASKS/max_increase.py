# Існує місто, що складається з n x n блоків, де кожен блок містить один будинок у вигляді вертикальної квадратної призми.
# Тобі дана матриця grid розміру n x n, де grid[row][column] є висотою будівлі, розташованої в блоці в рядку row і стовпці column.
# Лінія горизонту міста – це зовнішній контур, утворений усіма будинками, якщо дивитись на місто зі сторони. Лінія горизонту з кожної сторони світу північної, східної, південної та західної може бути різною.
# Дозволено збільшувати висоту будь-якої кількості будівель на будь-яку суму (сума може бути різною для кожної будівлі). Висота будівлі нульової висоти також може бути збільшена. Однак збільшення висоти будівель не має впливати на вигляд горизонту міста з будь-якої сторони світу.
# Поверни максимальну загальну суму, на яку можна збільшити висоту будівель без зміни лінії горизонту міста з усіх боків світу.
# Примітки:
# n == len(grid)
# n == len(grid [row])
# 2 <= n <= 50
# 0 <= grid[row][column] <= 100
# Дані на вхід: grid = [[3,0,8,4],[2,4,5,7],[9,2,6,3],[0,3,1,0]]
# Дані на вихід: 35
# Пояснення: Висота будівель показана у центрі зображення вище.
# Лінії горизонту, якщо дивитись з кожної сторони світа, намальовані червоним.
# grid після збільшення висоти будівель але без зміни горизонту:
# gridNew = [[8, 4, 8, 7],
#            [7, 4, 7, 7],
#            [9, 4, 8, 7],
#            [3, 3, 3, 3]]
# Приклад 2:
# Дані на вхід: grid = [[0,0,0],[0,0,0],[0,0,0]]
# Дані на вихід: 0
# Пояснення: Збільшення висоти будь-якої будівлі призведе до зміни лінії горизонту.

def max_increase(grid: list) -> int:
    row_maxes = [max(row) for row in grid]
    col_maxes = [max(col) for col in zip(*grid)]

    return sum(
        min(row_maxes[index_row], col_maxes[index]) - value
        for index_row, row in enumerate(grid)
        for index, value in enumerate(row)
    )
