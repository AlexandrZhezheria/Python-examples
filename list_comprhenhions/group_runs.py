# В університеті прошли змагання з бігу. Студенти змагалися в бігу на дистанціях 30, 100, 200 и 400 метрів.
# Напиши функцію group_runs, яка приймає список student_runs, кожний елемент якого це результат студента в секундах у бігу
# на 30, 100, 200, 400 метрів відповідно. Функція повинна повертати список зі згрупованими результатами усіх студентів на кожну із дистанцій.
# Функція повинна містити тільки конструкцію return. Використовуй list comprehension всередині іншого list comprehension.


def group_runs(student_runs: list) -> list:
    return [
        [row[i] for row in student_runs] for i in range(len(student_runs[0]))
    ]

# return [[student_runs[j][i] for j in range(len(student_runs))] for i in range(len(student_runs[0]))]
# В першому вкладеному списковому виразі ми проходимось по студентах за допомогою range(len(student_runs)),
# і додаємо до списку результат студента student_runs[j][i] для кожної дистанції i. У другому вкладеному списковому
# виразі ми проходимось по кожній дистанції за допомогою range(len(student_runs[0])) і збираємо результати студентів,
# що згруповані за цією дистанцією.


# Приклад:

student_runs = [[5.6, 12.1, 25.3, 142.3]] # Всього один студент
group_runs(student_runs) == [
  [5.6],        # 30 метрів
  [12.1],       # 100 метрів
  [25.3],       # 200 метрів
  [142.3]       # 400 метрів
]

student_runs = [
    [5.9, 12.8, 26.5, 145.9], # Перший студент
    [6.1, 13.2, 30.1, 149],   # Другий студент
    [6.6, 14.3, 32.3, 152.5]  # Третій студент
]
group_runs(student_runs) == [
    [5.9, 6.1, 6.6],      # 30 метрів
    [12.8, 13.2, 14.3],   # 100 метрів
    [26.5, 30.1, 32.3],   # 200 метрів
    [145.9, 149, 152.5]   # 400 метрів
]